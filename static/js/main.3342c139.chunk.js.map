{"version":3,"sources":["serviceWorker.js","components/card.js","components/cardList.js","components/scroll.js","components/searchBox.js","components/header.js","components/ErrorBoundary.js","containers/App.js","actions.js","constants.js","reducer.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","props","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","robots","cardComponents","map","user","index","card","key","Scroll","style","overflowY","border","height","children","SearchBox","onSearchChange","console","log","type","placeholder","onChange","Header","PureComponent","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","_this$props","searchField","isPending","filteredRobots","filter","robot","toLowerCase","includes","header","searchBox","components_scroll","components_ErrorBoundary","cardList","onRequestRobots","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","initialStateSearch","initialStateRobots","rootReducer","createLogger","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3342c139.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst Card = (props)=>{\r\n\tconst {name,email,id} = props;\r\n\treturn(\r\n\r\n\t\t<div className=\"tc dib bg-light-green br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img src={`https://robohash.org/${id}?size=200x200`} alt='robots' />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\n//我的心情 #00ff00\r\n\r\nconst CardList = (props)=>{\r\n\r\n\tconst {robots} = props;\r\n\tconst cardComponents = robots.map((user,index)=>{\r\n\t\treturn (\r\n\t\t\t<Card \r\n\t\t\t\tkey={robots[index].id} \r\n\t\t\t\tid={robots[index].id} \r\n\t\t\t\tname={robots[index].name} \r\n\t\t\t\temail={robots[index].email}\r\n\t\t\t/>\r\n\t\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\r\n\t<div>\r\n\t\t{cardComponents}\r\n\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n\r\n\treturn (\r\n\t\t<div style={{overflowY:'scroll',border:\"1px solid black\",height:'800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = (props)=>{\r\n\tconst {onSearchChange} = props;\r\n\tconsole.log(\"SearchBox\");\r\n\treturn (\r\n\t\t<div className = 'pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \r\n\t\t\ttype=\"search\" \r\n\t\t\tplaceholder=\"search robots\" \r\n\t\t\tonChange = {onSearchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n}\r\n\r\nexport default SearchBox;","import React, {PureComponent} from 'react';\r\n\r\nclass Header extends PureComponent{\r\n\r\n\t//Per React offical docs, it's better to use PureComponent as\r\n\t//you can when you need to reduce unnecessary render insetaed of\r\n\t//shouldComponentUpdate() for Component.\r\n\t//PureComponent implements its own shallow comparision for\r\n\t//props and state, shouldComponentUpdate() should only be used for\r\n\t//performance optimization.\r\n\trender(){\r\n\t\tconsole.log(\"Header\");\r\n\t\treturn (<h1 className='f1'>RoboFriends</h1>);\r\n\t}\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\r\n\tconstructor(props){\r\n\t\t\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state={\r\n\t\t\thasError:false\r\n\t\t}\r\n\t}\r\n\r\n\t//For react 16 or above\r\n\tcomponentDidCatch(error,info){\r\n\t\tthis.setState({hasError:true});\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>Oooops. This is not good</h1>\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport CardList from '../components/cardList';\r\nimport Scroll from '../components/scroll';\r\nimport SearchBox from '../components/searchBox';\r\nimport Header from '../components/header';\r\n\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport {setSearchField,requestRobots} from '../actions';\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn {\r\n\t\tsearchField:state.searchRobots.searchField,\r\n\t\trobots:state.requestRobots.robots,\r\n\t\tisPending:state.requestRobots.isPending,\r\n\t\terror:state.requestRobots.error\r\n\t};\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n\r\n\treturn {\r\n\r\n\t\tonSearchChange: (event)=>{\r\n\t\t\r\n\t\t\treturn dispatch(setSearchField(event.target.value));\r\n\t\t},\r\n\r\n\t\tonRequestRobots:()=>{\r\n\t\t\treturn dispatch(requestRobots());\r\n\t\t}\r\n\t};\r\n}\r\n\r\nclass App extends Component {\r\n\r\n\trender(){\r\n\r\n\t\tconst {searchField,onSearchChange,robots,isPending} = this.props;\r\n\r\n\t\tconsole.log(this.props);\r\n\r\n\t\tconst filteredRobots = robots.filter(robot=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t\t});\r\n\r\n\t\t\treturn(\r\n\t\t\r\n\t\t\t<div className='tc'>\r\n\r\n\t\t\t\t<Header/>\r\n\t\t\t\t<SearchBox onSearchChange = {onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t{ isPending ? <h1 className='f1 tc'>Loading...</h1> :\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Scroll>\r\n\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\r\n\t\tthis.props.onRequestRobots();\r\n\t\r\n\t}\r\n\t\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","import {CHANGE_SEARCH_FIELD,REQUEST_ROBOTS_PENDING,REQUEST_ROBOTS_SUCCESS,REQUEST_ROBOTS_FAILED,} from './constants.js'\r\nexport const setSearchField = (text)=>{\r\n\r\n\treturn {\r\n\t\ttype:CHANGE_SEARCH_FIELD,\r\n\t\tpayload:text\r\n\t};\r\n};\r\n\r\nexport const requestRobots = ()=> (dispatch)=>{\r\n\r\n\tdispatch({type:REQUEST_ROBOTS_PENDING});\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=>{\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then(data=>dispatch({type:REQUEST_ROBOTS_SUCCESS,payload:data}))\r\n\t\t.catch(error=>dispatch({type:REQUEST_ROBOTS_FAILED,payload:error}));\r\n\r\n};","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","import {CHANGE_SEARCH_FIELD,REQUEST_ROBOTS_PENDING,REQUEST_ROBOTS_SUCCESS,REQUEST_ROBOTS_FAILED,} from './constants.js'\r\n\r\nconst initialStateSearch ={\r\n\tsearchField:''\r\n};\r\n\r\nconst initialStateRobots={\r\n\tisPending:false,\r\n\trobots:[],\r\n\terror:''\r\n};\r\n\r\nexport const searchRobots = (state=initialStateSearch,action={})=>{\r\n\r\n\tswitch(action.type){\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\r\n\t\t\treturn Object.assign({},state,{searchField:action.payload});\r\n\t\tdefault:\r\n\t\t\treturn state;\t\r\n\t}\r\n\r\n};\r\n\r\n\r\n\r\nexport const requestRobots =(state=initialStateRobots,action={})=>{\r\n\tswitch(action.type){\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({},state,{isPending:true});\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn Object.assign({},state,{robots:action.payload,isPending:false});\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({},state,{error:action.payload,isPending:false});\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\nimport App from './containers/App';\n\nimport {Provider} from 'react-redux';\nimport {createStore,applyMiddleware,combineReducers} from 'redux';\nimport {createLogger} from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport {searchRobots,requestRobots} from './reducer.js';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRobots,requestRobots});\nconst store = createStore(rootReducer,applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n\t,document.getElementById('root')\n\n\t);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}